# UI Animation Performance Optimization Anchor (Flutter)

metadata:
  id: ui_animation_perf
  title: 动画性能优化（Flutter）
  module: ui
  tags: [animation, ticker, vsync, frame_rate, jank, performance, flutter]

summary:
  - Flutter 动画通过 Ticker 驱动，每帧刷新需要精准控制帧率
  - 过多动画、未释放的 Ticker、过度 rebuild 会影响流畅度
  - 应合理使用 AnimatedBuilder、FadeTransition、AnimatedOpacity 等高性能控件

patterns:
  - 动画绑定 vsync，避免无控制的 Ticker.schedule()
  - 使用 Implicit Animation 替代手动控制的显式 AnimationController
  - 避免 setState 动画中频繁触发 widget 重建

kpi:
  - 帧率维持在 60 FPS，Dropped Frames 低于 1%
  - 动画过程 jank 帧率抖动 < 5ms
  - 控制动画层级 < 5 层，保持绘制过程简洁

tools:
  - DevTools → Flutter Frames → Frame Chart 分析动画耗时
  - Performance Overlay 查看 UI/GPU 动画稳定性
  - Flutter Inspector 跟踪动画绑定结构
